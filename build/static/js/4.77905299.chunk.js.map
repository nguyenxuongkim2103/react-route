{"version":3,"sources":["components/comments/Comments.module.css","components/comments/NewCommentForm.module.css","components/comments/CommentItem.module.css","components/comments/CommentsList.module.css","components/quotes/HighlightedQuote.module.css","components/comments/NewCommentForm.js","components/comments/CommentItem.js","components/comments/CommentsList.js","components/comments/Comments.js","components/quotes/HighlightedQuote.js","components/pages/QuoteDetail.js"],"names":["module","exports","NewCommentForm","props","commentTextRef","useRef","useHttp","addComment","sendRequest","status","error","onAddedComment","useEffect","submitFormHandler","event","preventDefault","enteredText","current","value","commentData","text","quoteId","className","classes","form","onSubmit","LoadingSpinner","control","htmlFor","id","rows","ref","actions","CommentItem","item","CommentsList","comments","map","comment","Comments","useState","isAddingComment","setIsAddingComment","useParams","getAllComments","loadedComments","data","onAddedCommentHandler","useCallback","length","onClick","HighlightedQuote","quote","author","QuoteDetail","match","useRouteMatch","getSingleQuote","loadedQuote","path","exact","to","url"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,SAAW,6B,mBCA7BD,EAAOC,QAAU,CAAC,KAAO,6BAA6B,QAAU,gCAAgC,QAAU,gCAAgC,QAAU,kC,mBCApJD,EAAOC,QAAU,CAAC,KAAO,4B,mBCAzBD,EAAOC,QAAU,CAAC,SAAW,iC,mBCA7BD,EAAOC,QAAU,CAAC,MAAQ,kC,yIC2CXC,EAtCQ,SAACC,GACtB,IAAMC,EAAiBC,mBAEvB,EAAuCC,YAAQC,KAAvCC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,OAAQC,EAA7B,EAA6BA,MAErBC,EAAmBR,EAAnBQ,eAERC,qBAAU,WACO,cAAXH,GAA2BC,GAC7BC,MAED,CAACF,EAAQC,EAAOC,IAEnB,IAAME,EAAoB,SAACC,GACzBA,EAAMC,iBAEN,IAAMC,EAAcZ,EAAea,QAAQC,MAG3CV,EAAY,CAAEW,YAAa,CAAEC,KAAMJ,GAAeK,QAASlB,EAAMkB,WAGnE,OACE,uBAAMC,UAAWC,IAAQC,KAAMC,SAAUZ,EAAzC,UACc,YAAXJ,GAAyB,qBAAKa,UAAU,WAAf,SACxB,cAACI,EAAA,EAAD,MAEF,sBAAKJ,UAAWC,IAAQI,QAASF,SAAUZ,EAA3C,UACE,uBAAOe,QAAQ,UAAf,0BACA,0BAAUC,GAAG,UAAUC,KAAK,IAAIC,IAAK3B,OAEvC,qBAAKkB,UAAWC,IAAQS,QAAxB,SACE,wBAAQV,UAAU,MAAlB,+B,iBC5BOW,EARK,SAAC9B,GACnB,OACE,oBAAImB,UAAWC,IAAQW,KAAvB,SACE,4BAAI/B,EAAMiB,U,iBCQDe,EAVM,SAAChC,GACpB,OACE,oBAAImB,UAAWC,IAAQa,SAAvB,SACGjC,EAAMiC,SAASC,KAAI,SAACC,GAAD,OAClB,cAAC,EAAD,CAA8BlB,KAAMkB,EAAQlB,MAA1BkB,EAAQT,UCqDnBU,EAlDE,WACf,MAA8CC,oBAAS,GAAvD,mBAAOC,EAAP,KAAwBC,EAAxB,KAEQrB,EADOsB,cACPtB,QACR,EAAsDf,YAAQsC,KAAtDpC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,OAAcoC,EAAnC,EAA6BC,KAE7BlC,qBAAU,WACRJ,EAAYa,KACX,CAACA,EAASb,IAEb,IAQI4B,EAJEW,EAAwBC,uBAAY,WACxCxC,EAAYa,KACX,CAACb,EAAaa,IAoBjB,MAhBe,YAAXZ,IACF2B,EAAW,qBAAKd,UAAU,WAAf,SACT,cAACI,EAAA,EAAD,OAIW,cAAXjB,GAA2BoC,GAAkBA,EAAeI,OAAS,IACvEb,EAAW,cAAC,EAAD,CAAaA,SAAUS,KAGrB,cAAXpC,GAA4BoC,GAA4C,IAA1BA,EAAeI,SAC/Db,EAAW,mBAAGd,UAAU,WAAb,0CAMX,0BAASA,UAAWC,IAAQa,SAA5B,UACE,gDACEK,GACA,wBAAQnB,UAAU,MAAM4B,QA9BC,WAC7BR,GAAmB,IA6Bf,2BAIDD,GAAmB,cAAC,EAAD,CAAgBpB,QAASA,EAASV,eAAgBoC,IACrEX,M,iBC5CQe,EATU,SAAChD,GACxB,OACE,yBAAQmB,UAAWC,IAAQ6B,MAA3B,UACE,4BAAIjD,EAAMiB,OACV,qCAAajB,EAAMkD,aC+CVC,UA3CK,WAChB,IAAMC,EAAQC,cAGNnC,EAFOsB,cAEPtB,QAER,EAA0Df,YAAQmD,KAAgB,GAA1EjD,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,OAAciD,EAAnC,EAA6BZ,KAAmBpC,EAAhD,EAAgDA,MAMhD,OAJAE,qBAAU,WACNJ,EAAYa,KACb,CAACb,EAAaa,IAEF,YAAXZ,EACO,qBAAKa,UAAU,WAAf,SACH,cAACI,EAAA,EAAD,MAIJhB,EACO,mBAAGY,UAAU,WAAb,SAAyBZ,IAG/BgD,EAAYtC,KAKb,eAAC,WAAD,WACI,cAAC,EAAD,CAAkBA,KAAMsC,EAAYtC,KAAMiC,OAAQK,EAAYL,SAC9D,cAAC,IAAD,CAAOM,KAAMJ,EAAMI,KAAMC,OAAK,EAA9B,SACI,qBAAKtC,UAAU,WAAf,SACI,cAAC,IAAD,CAAMA,UAAU,YAAYuC,GAAE,UAAKN,EAAMO,IAAX,aAA9B,+BAKR,cAAC,IAAD,CAAOH,KAAI,UAAKJ,EAAMI,KAAX,aAAX,SACI,cAAC,EAAD,SAdD,mBAAGrC,UAAU,WAAb","file":"static/js/4.77905299.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__52xVy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__2P1xa\",\"loading\":\"NewCommentForm_loading__2HeAC\",\"control\":\"NewCommentForm_control__3C3Qu\",\"actions\":\"NewCommentForm_actions__25VJ4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CommentItem_item__1n_PP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"CommentsList_comments__Nv2r-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"HighlightedQuote_quote__3JPyV\"};","import { useRef, useEffect } from 'react';\nimport useHttp from '../../hooks/use-http';\nimport { addComment } from '../../lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './NewCommentForm.module.css';\n\nconst NewCommentForm = (props) => {\n  const commentTextRef = useRef();\n\n  const { sendRequest, status, error } = useHttp(addComment);\n\n  const { onAddedComment } = props;\n\n  useEffect(() => {\n    if (status === 'completed' && !error) {\n      onAddedComment();\n    }\n  }, [status, error, onAddedComment]);\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n\n    const enteredText = commentTextRef.current.value;\n\n    // send comment to server\n    sendRequest({ commentData: { text: enteredText }, quoteId: props.quoteId });\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      {status === 'pending' && (<div className='centered'>\n        <LoadingSpinner />\n      </div>)}\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor='comment'>Your Comment</label>\n        <textarea id='comment' rows='5' ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className='btn'>Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","import classes from './CommentItem.module.css';\n\nconst CommentItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <p>{props.text}</p>\n    </li>\n  );\n};\n\nexport default CommentItem;\n","import CommentItem from './CommentItem';\nimport classes from './CommentsList.module.css';\n\nconst CommentsList = (props) => {\n  return (\n    <ul className={classes.comments}>\n      {props.comments.map((comment) => (\n        <CommentItem key={comment.id} text={comment.text} />\n      ))}\n    </ul>\n  );\n};\n\nexport default CommentsList;\n","import { useState, useEffect, useCallback } from 'react';\nimport { useParams } from 'react-router';\n\nimport classes from './Comments.module.css';\nimport NewCommentForm from './NewCommentForm';\nimport useHttp from '../../hooks/use-http';\nimport { getAllComments } from '../../lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport CommentList from './CommentsList';\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n  const { quoteId } = params;\n  const { sendRequest, status, data: loadedComments } = useHttp(getAllComments);\n\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [quoteId, sendRequest]);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  const onAddedCommentHandler = useCallback(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  let comments;\n\n  if (status === 'pending') {\n    comments = <div className='centered'>\n      <LoadingSpinner />\n    </div>\n  }\n\n  if (status === 'completed' && (loadedComments && loadedComments.length > 0)) {\n    comments = <CommentList comments={loadedComments} />\n  }\n\n  if (status === 'completed' && (!loadedComments || loadedComments.length === 0)) {\n    comments = <p className='centered'>No Comments were added yet!</p>\n  }\n\n  \n\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className='btn' onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && <NewCommentForm quoteId={quoteId} onAddedComment={onAddedCommentHandler} />}\n      {comments}\n    </section>\n  );\n};\n\nexport default Comments;\n","import classes from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","import { Fragment, useEffect } from \"react\";\r\nimport { useParams, Route, Link, useRouteMatch } from \"react-router-dom\";\r\nimport Comments from '../comments/Comments';\r\nimport HighlightedQuote from '../quotes/HighlightedQuote';\r\nimport useHttp from '../../hooks/use-http';\r\nimport { getSingleQuote } from '../../lib/api';\r\nimport LoadingSpinner from '../UI/LoadingSpinner';\r\n\r\n\r\n\r\nconst QuoteDetail = () => {\r\n    const match = useRouteMatch();\r\n    const params = useParams();\r\n\r\n    const { quoteId } = params;\r\n\r\n    const { sendRequest, status, data: loadedQuote, error } = useHttp(getSingleQuote, true);\r\n\r\n    useEffect(() => {\r\n        sendRequest(quoteId);\r\n    }, [sendRequest, quoteId]);\r\n\r\n    if (status === 'pending') {\r\n        return <div className='centered'>\r\n            <LoadingSpinner />\r\n        </div>\r\n    }\r\n\r\n    if (error) {\r\n        return <p className='centered'>{error}</p>\r\n    }\r\n\r\n    if (!loadedQuote.text){\r\n        return <p className='centered'>No Quote Found</p>\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <HighlightedQuote text={loadedQuote.text} author={loadedQuote.author} />\r\n            <Route path={match.path} exact>\r\n                <div className='centered'>\r\n                    <Link className='btn--flat' to={`${match.url}/comments`} >\r\n                        Load Comments\r\n                </Link>\r\n                </div>\r\n            </Route>\r\n            <Route path={`${match.path}/comments`}>\r\n                <Comments />\r\n            </Route>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default QuoteDetail;"],"sourceRoot":""}